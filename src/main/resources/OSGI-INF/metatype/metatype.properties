#
# This file is part of Everit - Commons DBCP Components.
#
# Everit - Commons DBCP Components is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Everit - Commons DBCP Components is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Everit - Commons DBCP Components.  If not, see <http://www.gnu.org/licenses/>.
#


dataSource.target.name=DataSource service filter
dataSource.target.description=The OSGi filter expression to select the right non-pooled DataSource.
xaDataSource.target.name=XADataSource service filter
xaDataSource.target.description=The OSGi filter expression to select the right XADataSource.
defaultAutoCommit.name=Default auto commit mode
defaultAutoCommit.description=The default auto-commit state of connections created by this pool.
defaultReadOnly.name=Default read-only state
defaultReadOnly.description=The default read-only state of connections created by this pool.
defaultTransactionIsolation.name=Default transaction isolation
defaultTransactionIsolation.description=The default TransactionIsolation state of connections created by this pool.
transaction_isolation.none=None
transaction_isolation.read_uncommited=Read uncommited
transaction_isolation.read_commited=Read commited
transaction_isolation.repeatable_read=Repeatable read
transaction_isolation.serializable=Serializable
defaultCatalog.name=Default catalog
defaultCatalog.description=The default "catalog" of connections created by this pool.
maxTotal.name=Max. total
maxTotal.description=Sets the maximum total number of idle and borrows connections that can be active at the same time. Use a negative value for no limit.
minIdle.name=Min. idle connections
minIdle.description=The minimum number of active connections that can remain idle in the pool, without extra ones being created, or 0 to create none.
initialSize.name=Initial size
initialSize.description=The initial number of connections that are created when the pool is started.
maxWaitMillis.name=Max. wait
maxWaitMillis.description=The maximum number of milliseconds that the pool will wait for a connection to be returned before throwing an exception. A value less than or equal to zero means the pool is set to wait indefinitely.
poolPreparedStatements.name=Pool prepared statements
poolPreparedStatements.description=Prepared statement pooling for this pool. When this property is set to "true" both PreparedStatements and CallableStatements are pooled.
maxOpenPreparedStatements.name=Max. open prepared statements
maxOpenPreparedStatements.description=The maximum number of open statements that can be allocated from the statement pool at the same time, or non-positive for no limit.
testOnBorrow.name=Test on borrow
testOnBorrow.description=The indication of whether objects will be validated before being borrowed from the pool. If the object fails to validate, it will be dropped from the pool, and we will attempt to borrow another. For a <code>true</code> value to have any effect, the "Validation query" property must be set to a non-null string.
testOnReturn.name=Test on return
testOnReturn.description=The indication of whether objects will be validated before being returned to the pool. For a "true" value to have any effect, the 'Validation query' property must be set to a non-null string.
timeBetweenEvictionRunsMillis.name=Time between eviction runs
timeBetweenEvictionRunsMillis.description=The number of milliseconds to sleep between runs of the idle object evictor thread. When non-positive, no idle object evictor thread will be run.
numTestsPerEvictionRun.name=Test number per eviction run
numTestsPerEvictionRun.description=The number of objects to examine during each run of the idle object evictor thread (if any).
minEvictableIdleTimeMillis.name=Min. evictable idle time
minEvictableIdleTimeMillis.description=The minimum amount of time an object may sit idle in the pool before it is eligable for eviction by the idle object evictor (if any).
testWhileIdle.name=Test while idle
testWhileIdle.description=This property determines whether or not the idle object evictor will validate connections.  For a "true" value to have any effect, the "Validation query" property must be set to a non-null string.
validationQuery.name=Validation query
validationQuery.description=The SQL query that will be used to validate connections from this pool before returning them to the caller.  If specified, this query MUST be an SQL SELECT statement that returns at least one row.
validationQueryTimeout.name=Validation query timeout
validationQueryTimeout.description=The validation query timeout, the amount of time, in seconds, that connection validation will wait for a response from the database when executing a validation query. Use a value less than or equal to 0 for no timeout.
connectionInitSqls.name=Connection init SQLs
connectionInitSqls.description=The list of SQL statements executed when a physical connection is first created.
accessToUnderlyingConnectionAllowed.name=Access to underlying connection allowed
accessToUnderlyingConnectionAllowed.description=Controls access to the underlying connection.
removeAbandonedOnBorrow.name=Remove abandoned on borrow
removeAbandonedOnBorrow.description=Flag to remove abandoned connections if they exceed the removeAbandonedTimeout during pool maintenance. If set to true a connection is considered abandoned and eligible for removal if it has been idle longer than the removeAbandonedTimeout. Setting this to true can recover db connections from poorly written applications which fail to close a connection.
removeAbandonedOnMaintenance.name=Remove abandoned on maintenance
removeAbandonedOnMaintenance.description=Flag to remove abandoned connections if they exceed the removeAbandonedTimeout when borrowObject is invoked. If set to true a connection is considered abandoned and eligible for removal if it has been idle longer than the removeAbandonedTimeout. Setting this to true can recover db connections from poorly written applications which fail to close a connection.
removeAbandonedTimeout.name=Remove abandoned timeout
removeAbandonedTimeout.description=Timeout in seconds before an abandoned connection can be removed.
logAbandoned.name=Log abandoned
logAbandoned.description=Flag to log stack traces for application code which abandoned a Statement or Connection. Logging of abandoned Statements and Connections adds overhead for every Connection open or new Statement because a stack trace has to be generated.
default=Default
true=True
false=False
transactionManager.target.name=TransactionManager service filter
transactionManager.target.description=The OSGi filter expression to select the right transaction manager.
cacheState.name=Cache state
cacheState.description=The property that controls if the pooled connections cache some state rather than query the database for current state to improve performance.
lifo.name=LIFO
lifo.description=True means that borrowObject returns the most recently used ("last in") connection in the pool (if there are idle connections available). False means that the pool behaves as a FIFO queue - connections are taken from the idle instance pool in the order that they are returned to the pool.
testOnCreate.name=Test on create
testOnCreate.description=The indication of whether objects will be validated as soon as they have been created by the pool. If the object fails to validate, the borrow operation that triggered the creation will fail.
softMinEvictableIdleTimeMillis.name=Soft min. evictable idle time in millis
softMinEvictableIdleTimeMillis.description=Sets the minimum amount of time a connection may sit idle in the pool before it is eligible for eviction by the idle object evictor, with the extra condition that at least "minIdle" connections remain in the pool.
maxConnLifetimeMillis.name=Max. conn. lifetime millis
maxConnLifetimeMillis.description=Sets the maximum permitted lifetime of a connection in milliseconds. A value of zero or less indicates an infinite lifetime.
jmxName.name=JMX name
jmxName.description=The JMX name that has been requested for this DataSource. If the requested name is not valid, an alternative may be chosen. This DataSource will attempt to register itself using this name. If another component registers this DataSource with JMX and this name is valid this name will be used in preference to any specified by the other component.
enableAutoCommitOnReturn.name=Enable auto commit on return
enableAutoCommitOnReturn.description=Sets the value of the flag that controls whether or not connections being returned to the pool will checked and configured with Connection.setAutoCommit(true) if the auto commit setting is 'false' when the connection is returned. It is 'true' by default.
rollbackOnReturn.name=Rollback on return
rollbackOnReturn.description=Sets the flag that controls if a connection will be rolled back when it is returned to the pool if auto commit is not enabled and the connection is not read only.
abandonedUsageTracking.name=Abandoned usage tracking
abandonedUsageTracking.description=If the connection pool implements UsageTracking, configure whether the connection pool should record a stack trace every time a method is called on a pooled connection and retain the most recent stack trace to aid debugging of abandoned connections.
maxIdle.name=Max. idle
maxIdle.description=the maximum number of connections that can remain idle in the pool. Excess idle connections are destroyed on return to the pool.


org.everit.osgi.jdbc.commons.dbcp.DataSource.name= Everit Commons DBCP DataSource
org.everit.osgi.jdbc.commons.dbcp.DataSource.description=A pooled datasource component based on the commons-dbcp implementation.
org.everit.osgi.jdbc.commons.dbcp.ManagedDataSource.name=Everit Commons DBCP ManagedDataSource
org.everit.osgi.jdbc.commons.dbcp.ManagedDataSource.description=A managed and pooled datasource component that retrieves connections from an XADataSource based on the commons-dbcp implementation.